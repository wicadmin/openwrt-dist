name: Openwrt Build Bot
on:
  [workflow_dispatch]
  #push:
  #  branches: master
  #schedule:
  #- cron: 0 0 * * *

jobs:
  buildpkg:
    name: Build Openwrt Package
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        SDK_URL:
        - https://downloads.openwrt.org/releases/22.03.2/targets/x86/64/openwrt-sdk-22.03.2-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt SDK
      run: sudo apt install -y libev-dev libc-ares-dev libudns-dev libncurses-dev subversion libglib2.0-dev
    - name: Download Openwrt SDK
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
      run: |
        SDK_HOME=$(head -c -8 <<< $(basename $SDK_URL))
        wget $SDK_URL
        tar xf $(basename $SDK_URL) -C ~/
        mv ~/$SDK_HOME ~/sdk
        cp key-build ~/sdk/
    - name: Prep libmbim
      env:
        PRJ_NAME: libmbim
        PRJ_BRANCH: mbim-1-28
        VERSION: 1.28.0
      run: |
        cd ~/sdk
        # mkdir -p package/$PRJ_NAME
        svn checkout https://github.com/openwrt/packages/trunk/libs/$PRJ_NAME package/$PRJ_NAME
        sed -i 's/^PKG_SOURCE_VERSION.*/PKG_SOURCE_VERSION:='"$VERSION"'/' package/$PRJ_NAME/Makefile
        cat package/$PRJ_NAME/Makefile
    - name: Download Packages
      run: |
        cd ~/sdk
        # Shadowsocks
        ##git clone -b master https://github.com/shadowsocks/luci-app-shadowsocks package/luci-app-shadowsocks
        ##git clone -b master https://github.com/shadowsocks/openwrt-shadowsocks package/shadowsocks-libev
        ##git clone -b master https://github.com/aa65535/openwrt-simple-obfs package/simple-obfs
        # Misc
        ##git clone -b master https://github.com/aa65535/openwrt-dns-forwarder package/dns-forwarder
        ##git clone -b master https://github.com/aa65535/openwrt-dist-luci package/openwrt-dist-luci
        # Vlmcsd
        ##git clone -b master https://github.com/mchome/openwrt-vlmcsd package/vlmcsd
        ##git clone -b master https://github.com/mchome/luci-app-vlmcsd package/luci-app-vlmcsd
        # Smartdns
        ##git clone -b master https://github.com/pymumu/openwrt-smartdns package/smartdns
        ##git clone -b master https://github.com/pymumu/luci-app-smartdns package/luci-app-smartdns
        ##sed -i 's|../../luci.mk|$(TOPDIR)/feeds/luci/luci.mk|g; 7iPKG_NAME:=luci-app-smartdns' package/luci-app-smartdns/Makefile
        # Dependency
        #git clone -b master https://github.com/shadowsocks/openwrt-feeds package/custom
        ##pushd package/openwrt-dist-luci/tools/po2lmo ; make && sudo make install ; popd
        ./scripts/feeds update -a
        ./scripts/feeds install golang c-ares libev libopenssl libsodium mbedtls pcre libncursesw6 glib2
    - name: Compile
      run: |
        cd ~/sdk
        make defconfig
        # Edit config
        make V=s
    - name: Upload
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $SDK_URL)
        # Upload base only
        cd ~/sdk/bin/packages/*/base
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$TAG$(TZ='America/New_York' date +@%Y%m%d)"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/wicadmin/openwrt-dist.git" HEAD:$TAG
  buildimg:
    name: Build Openwrt Image
    needs: buildpkg
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
        - PROFILE: generic.x86_64
          IB_URL: https://downloads.openwrt.org/releases/22.03.2/targets/x86/64/openwrt-imagebuilder-22.03.2-x86-64.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates block-mount usbutils coreutils coreutils-base64 curl iperf3 ip-full kmod-nft-tproxy 
          ##ebtables kmod-ebtables-ipv6 kmod-usb-storage-extras kmod-usb-storage-uas kmod-fs-exfat kmod-fs-vfat 
          ##kmod-fs-ntfs kmod-fs-ext4 kmod-ipt-nat6 kmod-tun dosfstools ntfs-3g e2fsprogs fdisk libmbedtls luci 
          ##luci-compat luci-app-wireguard luci-app-samba4 luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn 
          ##luci-i18n-opkg-zh-cn luci-i18n-samba4-zh-cn mount-utils uhttpd bind-dig knot-dig iperf3 mtr htop 
          ##tmux nano lsblk etherwake ethtool tcpdump dnsmasq-full -dnsmasq kmod-usb-net-rtl8152 kmod-usb-net-asix 
          ##kmod-usb-net-asix-ax88179 mwan3 luci-app-mwan3 kmod-macvlan shadowsocks-libev luci-app-shadowsocks 
          ##luci-app-openclash kmod-inet-diag openvpn-mbedtls luci-app-openvpn zerotier
          INCLUDE_FILES: false
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt ImageBuilder
      run: sudo apt install -y libncurses-dev
    - name: Download Openwrt ImageBuilder
      env:
        IB_URL: ${{ matrix.IB_URL }}
      run: |
        wget $IB_URL
        tar xf $(basename $IB_URL)
    - name: Fetch Files
      env:
        IB_URL: ${{ matrix.IB_URL }}
      if: matrix.INCLUDE_FILES
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        cd $IB_HOME
        mkdir -p files/root/
        mkdir -p files/etc/opkg/
        mkdir -p files/etc/smartdns/
        cp ../simonsmh-dist.pub files/root/
        wget https://github.com/SYHGroup/easy_shell/raw/master/ddns/CloudFlare-ddns.sh -O files/root/CloudFlare-ddns.sh
        wget https://github.com/SYHGroup/easy_shell/raw/master/sss/update_list -O files/root/update_list
        cat files/root/update_list | sed "s/\/etc/files\/etc/g" | bash
        wget https://gist.githubusercontent.com/simonsmh/2a609e0c801acabc2e1d7733432bce4c/raw/blacklist-ip.conf -O files/etc/smartdns/blacklist-ip.conf
        echo "src/gz wicadmin https://cdn.jsdelivr.net/gh/wicadmin/openwrt-dist@$TAG" > files/etc/opkg/customfeeds.conf
    - name: Build Image
      shell: bash
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        PACKAGES: ${{ matrix.PACKAGES }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        cd $IB_HOME
        sed -i "/check_signature/d" repositories.conf
        echo "src/gz wicadmin https://github.com/wicadmin/openwrt-dist/raw/$TAG" >> repositories.conf
        makeopts=("PROFILE=${PROFILE%.*}" "PACKAGES=$PACKAGES")
        [[ -d files ]] && makeopts+=("FILES=files/")
        make info
        TERM=xterm-256color make image "${makeopts[@]}"
    - name: Upload
      id: upload
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        # Prepare Release
        ARTIFACTPATH="$(pwd)/image"
        mkdir -p $ARTIFACTPATH
        # Upload image
        cd $IB_HOME/bin/targets/$(cut -b 10- <<< $TAG)
        cp * $ARTIFACTPATH
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$PROFILE$(TZ='America/New_York' date +@%Y%m%d)"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/wicadmin/openwrt-dist.git" HEAD:image/$PROFILE
    - uses: actions/upload-artifact@v2
      with:
        name: image_${{ matrix.PROFILE }}
        path: ./image
